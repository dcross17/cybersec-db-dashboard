{% extends "main.j2" %}
{% block content %}

<h1>Devices</h1>
{# CREATE form #}
<h2>Create a Device</h2>
<form class="cuForm" id="create_device_form" method="POST" action="/Devices/create">
    <label for="create_device_firstName">Device Name: </label>
    <input type="text" name="create_device_name" id="create_device_name" required>

    <label for="create_device_ipAddress">IP Address: </label>
    <input type="text" name="create_device_ipAddress" id="create_device_ipAddress" required>

    <label for="create_device_type">Device Type: </label>
    <select name="create_device_type" id="create_device_type" required>
        <option value="" disabled selected>Select a device type</option>
        <option value="Server">Server</option>
        <option value="PC">PC</option>
        <option value="VM">Virtual Machine</option>
        <option value="Other">Other</option>
    </select>

    <label for="create_device_status">Status: </label>
    <select name="create_device_status" id="create_device_status" required>
        <option value="" disabled selected>Select a status</option>
        <option value="Active">Active</option>
        <option value="Offline">Offline</option>
        <option value="Disable">Disabled</option>
    </select>

    <label for="create_device_assignedTo">User: </label>
    <select name="create_device_assignedTo" id="create_device_assignedTo">
        <option value="" disabled selected>Select a user</option>
        {% for user in users %}
        <option value="{{user['userID']}}">
          {{user['userID'] }} {{user['firstName']}} {{user['lastName']}}
        </option>
        {% endfor %}
    </select>

    <input type="submit">
</form>

{# Citation for the following code: #}
{# Date: 6/8/25 #}
{# Copied from /OR/ Adapted from /OR/ Based on #}
{# Starter Code + Copilot assisted in some of the embedded preopulation logic, details below. #}
{# Source URL: www.m365.cloud.microsoft #}
{# If AI tools were used: #}
{# The original Update forms were based on the Flask starter code provided in the explorations. #}
{# To enable pre-population functionality, I added code to the get routes in the app.py file but was struggling#}
{# to have the changes populate in the form after severl attempts. I gave copilot the following initial prompt: #}
{# "How can one populate the update fields upon selection of an object from the dropdown with the following route: *inserted app.py get route*.#}\
{# "I beleive I am close but cannot locate my errors" After some refinement prompts and slight tweaking I arrived at the solution you see below.#}
{# UPDATE form #}
<h2>Update a Device</h2>
{# Prepopulate the fields to allow for selective changes #}
<form method="GET" action="/Devices">
    <label for="update_device_id">Device to Update: </label>
    <select name="device_id" id="update_device_id" required onchange="this.form.submit()">
        <option value="" disabled {% if not selected_device %}selected{% endif %}>Select a Device</option>
        {% for device in devices %}
        <option value="{{device['Device ID']}}" {% if selected_device and device['Device ID'] == selected_device['Device ID'] %}selected{% endif %}>
            {{device['Device ID']}} {{device['Device Name']}}
        </option>
        {% endfor %}
    </select>
    <noscript><input type="submit" value="Load"></noscript>
</form>

<form class="cuForm" id="update_device_form" method="POST" action="/Devices/update">
    <input type="hidden" name="update_device_id" value="{{ selected_device['Device ID'] if selected_device else '' }}">

    <label for="update_device_name">Device Name: </label>
    <input type="text" name="update_device_name" id="update_device_name"
           value="{{ selected_device['Device Name'] if selected_device else '' }}">

    <label for="update_device_ipAddress">IP Address: </label>
    <input type="text" name="update_device_ipAddress" id="update_device_ipAddress"
           value="{{ selected_device['IP Address'] if selected_device else '' }}">

    <label for="update_device_type">Device Type: </label>
    <select name="update_device_type" id="update_device_type" required>
        <option value="" disabled selected>Select a device type</option>
        <option value="Server" {% if selected_device and selected_device['Device Type'] == 'Server' %}selected{% endif %}>Server</option>
        <option value="PC" {% if selected_device and selected_device['Device Type'] == 'PC' %}selected{% endif %}>PC</option>
        <option value="VM" {% if selected_device and selected_device['Device Type'] == 'VM' %}selected{% endif %}>Virtual Machine</option>
        <option value="Other" {% if selected_device and selected_device['Device Type'] == 'Other' %}selected{% endif %}>Other</option>
    </select>

    <label for="update_device_status">Status: </label>
    <select name="update_device_status" id="update_device_status" required>
        <option value="" disabled selected>Select a status</option>
        <option value="Active" {% if selected_device and selected_device['Status'] == 'Active' %}selected{% endif %}>Active</option>
        <option value="Offline" {% if selected_device and selected_device['Status'] == 'Offline' %}selected{% endif %}>Offline</option>
        <option value="Disable" {% if selected_device and selected_device['Status'] == 'Disable' %}selected{% endif %}>Disabled</option>
    </select>

    <label for="update_device_assignedTo">User: </label>
    <select name="update_device_assignedTo" id="update_device_assignedTo" required>
        <option value="" disabled selected>Select a user</option>
        {% for user in users %}
        <option value="{{user['userID']}}" {% if selected_device and user['userID'] == selected_device['Assigned To'] %}selected{% endif %}>
          {{user['userID'] }} {{user['firstName']}} {{user['lastName']}}
        </option>
        {% endfor %}
    </select>

    <input type="submit" {% if not selected_device %}disabled{% endif %}>
</form>

{# Citation for the following code: #}
{# Date: 6/2/25 #}
{# Copied from /OR/ Adapted from /OR/ Based on #}
{# Copilot helped me solve a hunch, details below. #}
{# Source URL: www.m365.cloud.microsoft #}
{# If AI tools were used: #}
{# I realized that an empty list would result in an index error but was unsure on how to fix it/embed the proper logic. #}
{# Prompt: When keying into a list as seen in code: ***Removed for brevity, see below*, how can I use a conditional #}
{# To handle a potentially empty data set. After some refinements we arrived at the solution you see below, which is only #}
{# slighty modified from the original code #}

{# READ table #}
<table>
    <thead>
        <tr>
            {% if devices|length > 0 %}
                {% for key in devices[0].keys() %}
                    <th>{{ key }}</th>
                {% endfor %}
                <th></th>
            {% else %}
                <th>No data available</th>
            {% endif %}
        </tr>
    </thead>
    <tbody>
        {% if devices|length > 0 %}
            {% for device in devices %}
            <tr>
                <td>{{ device['Device ID'] }}</td>
                <td>{{ device['Device Name'] }}</td>
                <td>{{ device['IP Address'] }}</td>
                <td>{{ device['Device Type'] }}</td>
                <td>{{ device['Status'] }}</td>
                <td>{{ device['Assigned To'] }}</td>
                <td>
                    <form id="delete_device_form" method="POST" action="/Devices/delete" style="display:inline;">
                        <input type="hidden" name="delete_device_id" value="{{ device['Device ID'] }}">
                        <input type="hidden" name="delete_device_name" value="{{ device['Device Name'] }}">
                        <button type="submit">Delete</button>
                    </form>
                </td>
            </tr>
            {% endfor %}
        {% else %}
            <tr>
                <td colspan="7">No devices found.</td>
            </tr>
        {% endif %}
    </tbody>
</table>



{% endblock %}
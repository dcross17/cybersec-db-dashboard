{% extends "main.j2" %}
{% block content %}

<div class="flex mb-4">
{# Citation for the following code: #}
{# Date: 6/2/25 #}
{# Copied from /OR/ Adapted from /OR/ Based on #}
{# Copilot helped me solve a hunch, details below. #}
{# Source URL: www.m365.cloud.microsoft #}
{# If AI tools were used: #}
{# I realized that an empty list would result in an index error but was unsure on how to fix it/embed the proper logic. #}
{# Prompt: When keying into a list as seen in code: ***Removed for brevity, see below*, how can I use a conditional #}
{# To handle a potentially empty data set. After some refinements we arrived at the solution you see below, which is only #}
{# slighty modified from the original code #}
{# READ table #}

<div>
    <h1 class="text-2xl lg:text-3xl font-semibold text-gray-600 mb-4">Services</h1>
<table>
    <thead>
        <tr>
            {% if services|length > 0 %}
                {% for key in services[0].keys() %}
                    <th>{{ key }}</th>
                {% endfor %}
                <th></th>
            {% else %}
                <th>No data available</th>
            {% endif %}
        </tr>
    </thead>
    <tbody>
        {% if services|length > 0 %}
            {% for service in services %}
            <tr>
                <td>{{ service['Service ID'] }}</td>
                <td>{{ service['Service Name'] }}</td>
                <td>{{ service['Port'] }}</td>
                <td>{{ service['Protocol'] }}</td>
                <td>
                    <form id="delete_service_form" method="POST" action="/Services/delete" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this service?');">
                        <input class="text-base px-3 py-2 rounded border border-gray-300 mb-4" type="hidden" name="delete_service_id" value="{{ service['Service ID'] }}">
                        <input class="text-base px-3 py-2 rounded border border-gray-300 mb-4" type="hidden" name="delete_service_name" value="{{ service['Service Name'] }}">
                        <button type="submit" class ="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                                stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                    d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </form>
                </td>
            </tr>
            {% endfor %}
        {% else %}
            <tr>
                <td colspan="5">No services found.</td>
            </tr>
        {% endif %}
    </tbody>
</table>
</div>

{# CREATE form #}
<div class = "forms-row flex flex-row gap-4 w-full">
<form class="cuForm" id="create_service_form" method="POST" action="/Services/create">
    <h2>Create a Service</h2>
    <label for="create_service_firstName">Service Name</label>
    <input class="text-base px-3 py-2 rounded border border-gray-300 mb-4" type="text" name="create_service_name" id="create_service_name" required>

    <label for="create_service_port">Port</label>
    <input class="text-base px-3 py-2 rounded border border-gray-300 mb-4" type="number" name="create_service_port" id="create_service_port" min = "0" max = "65535" required>

    <label for="create_service_protocol">Protocol</label>
    <select class="text-base px-3 py-2 rounded border border-gray-300 mb-4" name="create_service_protocol" id="create_service_protocol" required>
        <option value="" disabled selected>Select a protocol</option>
        <option value="TCP">TCP</option>
        <option value="UDP">UDP</option>
        <option value="Other">Other</option>
    </select>

    <input class="text-base px-3 py-2 rounded border border-gray-300 mb-4" type="submit">
</form>

{# UPDATE form #}
{# Citation for the following code: #}
{# Date: 6/8/25 #}
{# Copied from /OR/ Adapted from /OR/ Based on #}
{# Starter Code + Copilot assisted in some of the embedded preopulation logic, details below. #}
{# Source URL: www.m365.cloud.microsoft #}
{# If AI tools were used: #}
{# The original Update forms were based on the Flask starter code provided in the explorations. #}
{# To enable pre-population functionality, I added code to the get routes in the app.py file but was struggling#}
{# to have the changes populate in the form after severl attempts. I gave copilot the following initial prompt: #}
{# "How can one populate the update fields upon selection of an object from the dropdown with the following route: *inserted app.py get route*.#}
{# "I beleive I am close but cannot locate my error" After some refinement prompts and slight tweaking I arrived at the solution you see below.#}
<div class="cuForm flex flex-col w-full">
<h2>Update a Service</h2>
<form method="GET" action="/Services">
    <label for="update_service_id">Service to Update</label>
    <select class="text-base px-3 py-2 rounded border border-gray-300 mb-4" name="service_id" id="update_service_id" required onchange="this.form.submit()">
        <option value="" disabled {% if not selected_service %}selected{% endif %}>Select a Service</option>
        {% for service in services %}
        <option value="{{service['Service ID']}}" {% if selected_service and service['Service ID'] == selected_service['Service ID'] %}selected{% endif %}>
            {{service['Service ID']}} - {{service['Service Name']}}
        </option>
        {% endfor %}
    </select>
    <noscript><input type="submit" value="Load"></noscript>
</form>

<form id="update_service_form" method="POST" action="/Services/update">
    
    <input type="hidden" name="update_service_id" value="{{ selected_service['Service ID'] if selected_service else '' }}">

    <label for="update_service_name">Service Name</label>
    <input class="text-base px-3 py-2 rounded border border-gray-300 mb-4" type="text" name="update_service_name" id="update_service_name"
        value="{{ selected_service['Service Name'] if selected_service else '' }}">

    <label for="update_service_port">Port</label>
    <input class="text-base px-3 py-2 rounded border border-gray-300 mb-4" type="number" name="update_service_port" min = "0" max = "65535" id="update_service_port"
        value="{{ selected_service['Port'] if selected_service else '' }}">

    <label for="update_service_protocol">Protocol</label>
    <select class="text-base px-3 py-2 rounded border border-gray-300 mb-4" name="update_service_protocol" id="update_service_protocol">
        <option value="" disabled selected>Select a protocol</option>
        <option value="TCP" {% if selected_service and selected_service['Protocol'] == 'TCP' %}selected{% endif %}>TCP</option>
        <option value="UDP" {% if selected_service and selected_service['Protocol'] == 'UDP' %}selected{% endif %}>UDP</option>
        <option value="Other" {% if selected_service and selected_service['Protocol'] == 'Other' %}selected{% endif %}>Other</option>
    </select>

    <input class="text-base px-3 py-2 rounded border border-gray-300 mb-4" type="submit" {% if not selected_service %}disabled{% endif %}>
</form>
</div>
</div>
{% endblock %}